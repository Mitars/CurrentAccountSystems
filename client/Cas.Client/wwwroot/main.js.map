{"version":3,"sources":["./src/app/customer-detail/account-create-dialog/account-create-dialog.component.ts","./src/app/customer-detail/account-create-dialog/account-create-dialog.component.html","./src/environments/environment.ts","./src/app/services/data.service.ts","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/routes.ts","./src/app/account-detail/transaction-create-dialog/transaction-create-dialog.component.ts","./src/app/account-detail/transaction-create-dialog/transaction-create-dialog.component.html","./src/app/customer-list/customer-list.component.ts","./src/app/customer-list/customer-list.component.html","./src/app/account-detail/account-detail.component.ts","./src/app/account-detail/account-detail.component.html","./src/app/services/snackbar.service.ts","./src/app/app-routing.module.ts","./src/app/customer-detail/customer-detail.component.ts","./src/app/customer-detail/customer-detail.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'account-create-dialog',\r\n  templateUrl: './account-create-dialog.component.html',\r\n  styleUrls: ['./account-create-dialog.component.scss'],\r\n})\r\nexport class AccountCreateDialog {\r\n  formControl = new FormControl('', [Validators.required]);\r\n  data = { name: null, initialCredit: null };\r\n\r\n  constructor(public dialogRef: MatDialogRef<AccountCreateDialog>) {}\r\n\r\n  onCreate() {\r\n    this.dialogRef.close(this.data);\r\n  }\r\n}\r\n","<h1>Create New Account</h1>\r\n<div mat-dialog-content>\r\n  <mat-form-field class=\"dialog-field\">\r\n    <mat-label>Account Name</mat-label>\r\n    <input matInput [(ngModel)]=\"data.name\" [formControl]=\"formControl\" />\r\n    <mat-error *ngIf=\"formControl.hasError('required')\">\r\n      Account Name is <strong>required</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field class=\"dialog-field\">\r\n    <mat-label>Initial Credit (Optional)</mat-label>\r\n    <input\r\n      type=\"number\"\r\n      matInput\r\n      [(ngModel)]=\"data.initialCredit\"\r\n      min=\"0\"\r\n      oninput=\"this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null\"\r\n    />\r\n  </mat-form-field>\r\n</div>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"primary\"\r\n    disabled=\"{{ formControl.invalid }}\"\r\n    [mat-dialog-close]=\"data\"\r\n    (click)=\"onCreate()\"\r\n  >\r\n    Create\r\n  </button>\r\n</mat-dialog-actions>\r\n","export const environment = {\r\n  production: true,\r\n  apiUrl: 'https://localhost:5000/api',\r\n  localStorageLastFetchedUser: 'lastFetchedUser'\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AccountToCreate } from '../models/accountToCreate';\r\nimport { TransactionToCreate } from '../models/transactionToCreate';\r\nimport { Customer } from '../models/customer';\r\nimport { tap } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  apiUrl = environment.apiUrl;\r\n  lastFetchedUser = environment.localStorageLastFetchedUser;\r\n\r\n  getCustomers() {\r\n    return this.http.get(`${this.apiUrl}/customers`);\r\n  }\r\n\r\n  getCustomer(id: number) {\r\n    const lastFetchedUser = JSON.parse(localStorage.getItem(this.lastFetchedUser)) as Customer;\r\n    if (id.toString() === lastFetchedUser?.id.toString()) {\r\n      return of(lastFetchedUser);\r\n    }\r\n\r\n    return this.http.get(`${this.apiUrl}/customers/${id}`).pipe(tap(customer =>\r\n      localStorage.setItem(this.lastFetchedUser, JSON.stringify(customer))));\r\n  }\r\n\r\n  getAccountsByCustomerId(customerId: string) {\r\n    return this.http.get(`${this.apiUrl}/customers/${customerId}/accounts`);\r\n  }\r\n\r\n  getAccount(id: string) {\r\n    return this.http.get(`${this.apiUrl}/accounts/${id}`);\r\n  }\r\n\r\n  createAccount(account: AccountToCreate) {\r\n    return this.http.post(`${this.apiUrl}/accounts`, account);\r\n  }\r\n\r\n  getTransactions(accountId: string) {\r\n    return this.http.get(`${this.apiUrl}/accounts/${accountId}/transactions`);\r\n  }\r\n\r\n  createTransaction(transaction: TransactionToCreate) {\r\n    return this.http.post(`${this.apiUrl}/transactions`, transaction);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss'],\r\n})\r\nexport class LandingComponent implements OnInit {\r\n  username = 'User';\r\n  time = new Date();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    setInterval(() => {\r\n      this.time = new Date();\r\n    }, 1000);\r\n  }\r\n}\r\n","<div class=\"landing-wrapper\">\r\n  <div class=\"info-panel\">\r\n    <div class=\"welcome-message\">\r\n      <div>Welcome Back</div>\r\n      <div class=\"welcome-message-name\">{{ username }}</div>\r\n    </div>\r\n\r\n    <div class=\"spacer\"></div>\r\n\r\n    <div class=\"clock\">\r\n      <div class=\"time\">{{ time | date: \"h:mm\" }}</div>\r\n      <div class=\"seconds\">{{ time | date: \":ss\" }}</div>\r\n      <div class=\"am-pm\">{{ time | date: \"a\" }}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"app-panel\">\r\n    <h1 class=\"title\">Available Apps</h1>\r\n    <mat-card class=\"mat-elevation-z2 app-card\">\r\n      <a class=\"no-link-style\" routerLink=\"/customers\">\r\n        <div class=\"app-card-header\">\r\n          <div class=\"gradient\">\r\n            <img\r\n              class=\"app-img\"\r\n              src=\"assets/app-customer-account-management.jpg\"\r\n            />\r\n            <div class=\"app-title\">Customer Account Management</div>\r\n          </div>\r\n        </div>\r\n        <mat-card-content>\r\n          <p>\r\n            Open and manage customers' accounts and transactions\r\n          </p>\r\n        </mat-card-content>\r\n      </a>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Customer Account Systems';\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <a class=\"title\" routerLink=\"\">\r\n      <div class=\"title-logo\"><img class=\"title-logo-img\" src=\"assets/cas-logo.svg\"></div>\r\n      <div class=\"subtitle\">Customer Account Systems</div>\r\n    </a>\r\n    <div class=\"slogan\">Making Tomorrow Today</div>\r\n    <span class=\"spacer\"></span>\r\n    <button mat-icon-button disabled><mat-icon>menu</mat-icon></button>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { appRoutes } from './routes';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// Material\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { CustomerDetailComponent } from './customer-detail/customer-detail.component';\r\nimport { AccountDetailComponent } from './account-detail/account-detail.component';\r\nimport { TransactionCreateDialog } from './account-detail/transaction-create-dialog/transaction-create-dialog.component';\r\nimport { AccountCreateDialog } from './customer-detail/account-create-dialog/account-create-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingComponent,\r\n    CustomerListComponent,\r\n    CustomerDetailComponent,\r\n    AccountDetailComponent,\r\n    AccountCreateDialog,\r\n    TransactionCreateDialog\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n    MatDividerModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    AccountCreateDialog,\r\n    TransactionCreateDialog\r\n  ],\r\n})\r\nexport class AppModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { AccountDetailComponent } from './account-detail/account-detail.component';\r\nimport { CustomerDetailComponent } from './customer-detail/customer-detail.component';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: '', component: LandingComponent },\r\n  { path: 'customers', component: CustomerListComponent },\r\n  { path: 'customer/:customerId/account/:id', component: AccountDetailComponent },\r\n  { path: 'customer/:id', component: CustomerDetailComponent },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n]\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'transaction-create-dialog',\r\n  templateUrl: './transaction-create-dialog.component.html',\r\n  styleUrls: ['./transaction-create-dialog.component.scss'],\r\n})\r\nexport class TransactionCreateDialog {\r\n  formControl = new FormControl('', [\r\n    Validators.required,\r\n    this.notZeroValidator,\r\n  ]);\r\n  data = { amount: null, description: null };\r\n\r\n  constructor(public dialogRef: MatDialogRef<TransactionCreateDialog>) {}\r\n\r\n  onCreate() {\r\n    this.dialogRef.close(this.data);\r\n  }\r\n\r\n  notZeroValidator(control: any) {\r\n    if (\r\n      control.value === undefined ||\r\n      isNaN(control.value) ||\r\n      control.value === 0\r\n    ) {\r\n      return { isNumber: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","<h1>Create New Transaction</h1>\r\n<div mat-dialog-content>\r\n  <mat-form-field class=\"dialog-field\">\r\n    <mat-label>Amount (USD)</mat-label>\r\n    <input\r\n      type=\"number\"\r\n      matInput\r\n      [(ngModel)]=\"data.amount\"\r\n      [formControl]=\"formControl\"\r\n    />\r\n    <mat-error *ngIf=\"formControl.hasError('required')\">\r\n      Amount is <strong>required</strong>\r\n    </mat-error>\r\n    <mat-error *ngIf=\"formControl.hasError('isNumber')\">\r\n      Amount cannot be <strong>0</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n  <mat-form-field class=\"dialog-field\">\r\n    <mat-label>Description (Optional)</mat-label>\r\n    <input matInput [(ngModel)]=\"data.description\" />\r\n  </mat-form-field>\r\n</div>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Cancel</button>\r\n  <button\r\n    mat-flat-button\r\n    color=\"primary\"\r\n    disabled=\"{{ formControl.invalid }}\"\r\n    [mat-dialog-close]=\"data\"\r\n    (click)=\"onCreate()\"\r\n  >\r\n    Create\r\n  </button>\r\n</mat-dialog-actions>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Customer } from '../models/customer';\r\nimport { DataService } from '../services/data.service';\r\nimport { SnackbarService } from '../services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-list',\r\n  templateUrl: './customer-list.component.html',\r\n  styleUrls: ['./customer-list.component.scss'],\r\n})\r\nexport class CustomerListComponent {\r\n  visibleCustomers: Customer[] = [];\r\n  allCustomers: Customer[] = [];\r\n  value: string = '';\r\n\r\n  isCustomerLoading = false;\r\n  isErrorLoading = false;\r\n\r\n  constructor(\r\n    private customerService: DataService,\r\n    private router: Router,\r\n    private snackbar: SnackbarService\r\n  ) {\r\n    this.isCustomerLoading = true;\r\n\r\n    this.customerService.getCustomers().subscribe(\r\n      (data: Customer[]) => {\r\n        this.allCustomers = data;\r\n        this.onFilterChange('');\r\n      }, (error) => {\r\n        console.error(error);\r\n        this.isErrorLoading = true;\r\n        this.snackbar.error('Failed to load the customers');\r\n      })\r\n      .add(() => this.isCustomerLoading = false);\r\n  }\r\n\r\n  onFilterChange(value: string) {\r\n    const filterText = value.toLowerCase()\r\n    this.visibleCustomers = this.allCustomers.filter(\r\n      (customer) =>\r\n        customer.firstName.toLowerCase().indexOf(filterText) !== -1 ||\r\n        customer.lastName.toLowerCase().indexOf(filterText) !== -1 ||\r\n        (customer.firstName.toLowerCase() + ' ' + customer.lastName.toLowerCase()).indexOf(filterText) !== -1\r\n    );\r\n  }\r\n\r\n  onCustomerClick(customer: Customer) {\r\n    this.router.navigate(['/customer/' + customer.id]);\r\n  }\r\n}\r\n","<div class=\"content-wrapper\">\r\n  <h1 class=\"title\">Users</h1>\r\n  <div class=\"filter-form-wrapper\">\r\n    <mat-form-field class=\"filter-form\">\r\n      <mat-label>Filter Users</mat-label>\r\n      <input matInput type=\"text\" [(ngModel)]=\"value\" (input)=\"onFilterChange($event.target.value)\">\r\n      <mat-icon matPrefix class=\"search-prefix\">search</mat-icon>\r\n      <button mat-button *ngIf=\"value\" matSuffix mat-icon-button (click)=\"value=''\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"center-300\" *ngIf=\"!!this.isErrorLoading\">\r\n    <h2 center=\"title\">Error Loading Customers</h2>\r\n  </div>\r\n  <mat-spinner *ngIf=\"!!this.isCustomerLoading\" class=\"center-50\" diameter=\"50\"></mat-spinner>\r\n  <mat-card class=\"mat-elevation-z0\" *ngFor=\"let customer of visibleCustomers\" >\r\n    <a class=\"no-link-style\" routerLink=\"{{ '/customer/' + customer.id }}\">\r\n      <mat-card-header>\r\n        <img mat-card-avatar src=\"{{customer.photo}}\">\r\n        <mat-card-title>{{customer.firstName}} {{customer.lastName}}</mat-card-title>\r\n        <mat-card-subtitle>ID: {{customer.id}}</mat-card-subtitle>\r\n      </mat-card-header>\r\n    </a>\r\n  </mat-card>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Account } from '../models/account';\r\nimport { DataService } from '../services/data.service';\r\nimport { Customer } from '../models/customer';\r\nimport { TransactionToCreate } from '../models/transactionToCreate';\r\nimport { Transaction } from '../models/transaction';\r\nimport { TransactionCreateDialog } from './transaction-create-dialog/transaction-create-dialog.component';\r\nimport { SnackbarService } from '../services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-account-detail',\r\n  templateUrl: './account-detail.component.html',\r\n  styleUrls: ['./account-detail.component.scss'],\r\n})\r\nexport class AccountDetailComponent {\r\n  account: Account;\r\n  customer: Customer;\r\n\r\n  isCustomerLoading = false;\r\n  isAccountLoading = false;\r\n  isTransactionCreating = false;\r\n  isErrorLoading = false;\r\n\r\n  constructor(\r\n    private customerService: DataService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private snackbar: SnackbarService\r\n  ) {\r\n    this.isCustomerLoading = true;\r\n    this.isAccountLoading = true;\r\n\r\n    this.route.params.subscribe((params) => {\r\n      this.customerService\r\n        .getCustomer(params['customerId'])\r\n        .subscribe((data) => {\r\n          this.customer = data as Customer;\r\n          this.isCustomerLoading = false;\r\n        }, (error) => {\r\n          console.error(error);\r\n          this.isErrorLoading = true;\r\n          this.snackbar.error('Failed to load the customer');\r\n        })\r\n        .add(() => this.isCustomerLoading = false);\r\n\r\n      this.customerService.getAccount(params['id']).subscribe((data) => {\r\n        this.account = data as Account;\r\n        this.account.created = new Date(this.account.created);\r\n      }, (error) => {\r\n        console.error(error);\r\n        this.isErrorLoading = true;\r\n        this.snackbar.error('Failed to load the account');\r\n      })\r\n      .add(() => this.isAccountLoading = false);\r\n    });\r\n  }\r\n\r\n  getBalance() {\r\n    return this.account?.transactions?.reduce(\r\n      (sum, transaction) => sum + transaction.amount,\r\n      0\r\n    );\r\n  }\r\n\r\n  openCreateDialog(): void {\r\n    this.dialog\r\n      .open(TransactionCreateDialog, {\r\n        width: '420px',\r\n        height: '260px',\r\n      })\r\n      .afterClosed()\r\n      .subscribe((result) => {\r\n        if (!result) {\r\n          return;\r\n        }\r\n\r\n        this.isTransactionCreating = true;\r\n        const transactionToCreate = { ...result, accountId: this.account.id } as TransactionToCreate;\r\n        this.customerService\r\n          .createTransaction(transactionToCreate)\r\n          .subscribe((data: Transaction) => {\r\n            this.account.transactions.unshift(data);\r\n            this.snackbar.success('Successfully created the transaction');\r\n          },\r\n          (error) => {\r\n            console.error(error);\r\n            this.snackbar.error('Failed creating the transaction');\r\n          })\r\n          .add(() => this.isTransactionCreating = false);\r\n      });\r\n  }\r\n}\r\n","<div class=\"content-wrapper\">\r\n  <div class=\"user-info-wrapper\">\r\n    <div class=\"header-user-info-wrapper\">\r\n      <a class=\"no-link-style\" routerLink=\"{{ '/customer/' + customer?.id }}\">\r\n        <div class=\"header-user-info\">\r\n          <div class=\"photo\">\r\n            <img src=\"{{ customer?.photo }}\" />\r\n          </div>\r\n          <div>\r\n            <h1 class=\"title\">{{ customer?.firstName }} {{ customer?.lastName }}</h1>\r\n            <div class=\"subtitle\">ID {{ customer?.id }}</div>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </div>\r\n\r\n    <div class=\"user-info\">\r\n      <h1 class=\"title\">{{account?.name}}</h1>\r\n      <div class=\"subtitle\">ID {{account?.id}}</div>\r\n    </div>\r\n  </div>\r\n\r\n  <br />\r\n\r\n  <div class=\"transaction-heading\">\r\n    <div class=\"transaction-heading-info\">\r\n      <h1 class=\"title\">Transactions</h1>\r\n      <div class=\"balance\">\r\n        <span class=\"balance-text\">Balance</span>\r\n        <span class=\"balance-value\">{{ getBalance() | currency: 'USD' }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"create-button\">\r\n      <button mat-flat-button color=\"primary\" (click)=\"openCreateDialog()\" disabled=\"{{ !!this.isCustomerLoading || !!this.isAccountLoading || !!this.isTransactionCreating || !!this.isErrorLoading }}\">Create New</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"transaction-list\">\r\n    <mat-spinner *ngIf=\"!!this.isAccountLoading\" class=\"center-50\" diameter=\"50\"></mat-spinner>\r\n    <div class=\"center-200\" *ngIf=\"!this.isAccountLoading && account?.transactions.length === 0\">\r\n      <h2 center=\"title\">No Transactions</h2>\r\n    </div>\r\n    <div class=\"center-300\" *ngIf=\"!!this.isErrorLoading\">\r\n      <h2 center=\"title\">Error Loading Transactions</h2>\r\n    </div>\r\n    <div class=\"transaction-entry\" *ngFor=\"let transaction of account?.transactions\">\r\n      <div class=\"transaction-entry-info\">\r\n        <div class=\"transaction-entry-info-id\"><span class=\"label\">ID</span> {{ transaction?.id }}</div>\r\n        <div class=\"transaction-entry-info-description\">{{ transaction?.description }}</div>\r\n      </div>\r\n      <div class=\"transaction-entry-separator\"></div>\r\n      <div class=\"transaction-entry-transactions\">\r\n        <div class=\"transaction-entry-transactions-balance\">{{ transaction?.amount | currency: 'USD' }}</div>\r\n        <div class=\"transaction-entry-transactions-right\"><span class=\"label\">Date</span> {{ !!transaction.created ? (transaction.created | date: 'yyyy-MM-dd hh:mm a') : 'N/A' }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackbarService {\r\n\r\n  constructor(\r\n    private _snackBar: MatSnackBar) {\r\n  }\r\n\r\n  error(message: string) {\r\n    return this.openSnackBar(message, 'snackbar-error');\r\n  }\r\n\r\n  success(message: string) {\r\n    return this.openSnackBar(message, 'snackbar-success');\r\n  }\r\n\r\n  info(message: string) {\r\n    return this.openSnackBar(message, 'snackbar-info');\r\n  }\r\n\r\n  private openSnackBar(message: string, panelClass: string) {\r\n    return this._snackBar.open(message, 'Close', {\r\n      horizontalPosition: 'end',\r\n      verticalPosition: 'bottom',\r\n      duration: 3000,\r\n      panelClass: [panelClass]});\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DataService } from '../services/data.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Customer } from '../models/customer';\r\nimport { Account } from '../models/account';\r\nimport { AccountCreateDialog } from './account-create-dialog/account-create-dialog.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { SnackbarService } from '../services/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-detail',\r\n  templateUrl: './customer-detail.component.html',\r\n  styleUrls: ['./customer-detail.component.scss'],\r\n})\r\nexport class CustomerDetailComponent {\r\n  customer: Customer = {} as Customer;\r\n  accounts: Account[] = [];\r\n\r\n  balance: number = 0;\r\n\r\n  isCustomerLoading = false;\r\n  isAccountsLoading = false;\r\n  isAccountCreating = false;\r\n  isErrorLoading = false;\r\n\r\n  constructor(\r\n    private customerService: DataService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog,\r\n    private snackbar: SnackbarService\r\n  ) {\r\n    this.isCustomerLoading = true;\r\n    this.isAccountsLoading = true;\r\n\r\n    this.route.params.subscribe((params) => {\r\n      this.customerService.getCustomer(params['id']).subscribe((data) => {\r\n        this.customer = data as Customer;\r\n        this.customer.dateOfBirth = new Date(this.customer.dateOfBirth);\r\n      }, (error) => {\r\n        console.error(error);\r\n        this.isErrorLoading = true;\r\n        this.snackbar.error('Failed to load the customer');\r\n      }).add(() => this.isCustomerLoading = false);\r\n\r\n      this.customerService\r\n        .getAccountsByCustomerId(params['id'])\r\n        .subscribe((data: Account[]) => {\r\n          data.forEach((account) => {\r\n            account.created = new Date(account.created);\r\n            this.accounts.push(account);\r\n          });\r\n        }, (error) => {\r\n          console.error(error);\r\n          this.isErrorLoading = true;\r\n          this.snackbar.error('Failed to load the accounts');\r\n        })\r\n        .add(() => this.isAccountsLoading = false);\r\n    })\r\n  }\r\n\r\n  getTotalBalance() {\r\n    return this.accounts.reduce(\r\n      (sum, account) => sum + this.getBalance(account),\r\n      0\r\n    );\r\n  }\r\n\r\n  getBalance(account: Account) {\r\n    return account.transactions.reduce(\r\n      (sum, transaction) => sum + transaction.amount,\r\n      0\r\n    );\r\n  }\r\n\r\n  openCreateDialog(): void {\r\n    this.dialog\r\n      .open(AccountCreateDialog, {\r\n        width: '380px',\r\n        height: '270px',\r\n      })\r\n      .afterClosed()\r\n      .subscribe((result) => {\r\n        if (!result) {\r\n          return;\r\n        }\r\n\r\n        this.isAccountCreating = true;\r\n        const accountToCreate = { ...result, customerId: this.customer.id };\r\n\r\n        this.customerService\r\n          .createAccount(accountToCreate)\r\n          .subscribe((data: Account) => {\r\n            this.accounts.push(data);\r\n            this.snackbar.success('Successfully created the account');\r\n          },\r\n          (error) => {\r\n            console.error(error)\r\n            this.snackbar.error('Failed creating the account');\r\n          })\r\n          .add(() => this.isAccountCreating = false);\r\n      });\r\n  }\r\n}\r\n","<div class=\"content-wrapper\">\r\n  <div class=\"user-info-wrapper\">\r\n    <h1 class=\"title\">{{ customer.firstName }} {{ customer.lastName }}</h1>\r\n    <div class=\"user-info\">\r\n      <div class=\"photo\">\r\n        <img src=\"{{ customer.photo }}\" />\r\n      </div>\r\n      <div class=\"user-info-fields\">\r\n        <div class=\"field\">\r\n          <div class=\"field-name\">ID</div>\r\n          <div class=\"field-value\">{{ customer.id }}</div>\r\n        </div>\r\n        <div class=\"field\">\r\n          <div class=\"field-name\">First Name</div>\r\n          <div>{{ customer.firstName }}</div>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <div class=\"field-name\">Last Name</div>\r\n          <div>{{ customer.lastName }}</div>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <div class=\"field-name\">Date of Birth</div>\r\n          <div>{{ customer.dateOfBirth | date: 'yyyy-MM-dd' }}</div>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <div class=\"field-name\">Email</div>\r\n          <div>{{ customer.email }}</div>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <div class=\"field-name\">Phone Number</div>\r\n          <div>{{ customer.phone }}</div>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <div class=\"field-name\">Gender</div>\r\n          <div>{{ customer.gender | titlecase }}</div>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <div class=\"field-name\">Address</div>\r\n          <div>{{ customer.address }}</div>\r\n        </div>\r\n\r\n        <div class=\"field\">\r\n          <div class=\"field-name\">Company</div>\r\n          <div>{{ customer.company }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <br />\r\n\r\n  <div class=\"account-heading\">\r\n    <div class=\"account-heading-info\">\r\n      <h1 class=\"title\">Accounts</h1>\r\n      <div class=\"balance\">\r\n        <span class=\"balance-text\">Balance</span>\r\n        <span class=\"balance-value\">{{ getTotalBalance() | currency: 'USD' }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"create-button\">\r\n      <button mat-flat-button color=\"primary\" (click)=\"openCreateDialog()\" disabled=\"{{ !!this.isCustomerLoading || !!this.isAccountsLoading || !!this.isAccountCreating || !!this.isErrorLoading }}\">Create New</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"account-list\">\r\n    <mat-spinner *ngIf=\"!!this.isAccountsLoading\" class=\"center-50\" diameter=\"50\"></mat-spinner>\r\n    <div class=\"center-200\" *ngIf=\"!this.isAccountsLoading && accounts.length === 0 && !this.isErrorLoading\">\r\n      <h2 class=\"title\">No Accounts</h2>\r\n    </div>\r\n    <div class=\"center-300\" *ngIf=\"!!this.isErrorLoading\">\r\n      <h2 center=\"title\">Error Loading Accounts</h2>\r\n    </div>\r\n    <a class=\"no-link-style\" *ngFor=\"let account of accounts\" routerLink=\"{{ '/customer/' + customer.id + '/account/' + account.id }}\">\r\n      <div class=\"account-entry\">\r\n        <div class=\"account-entry-info\">\r\n          <div class=\"account-entry-info-name\">{{ account.name }}</div>\r\n          <div class=\"account-entry-info-id\"><span class=\"label\">ID</span> {{ account.id }}</div>\r\n        </div>\r\n        <div class=\"account-entry-separator\"></div>\r\n        <div class=\"account-entry-transactions\">\r\n          <div class=\"account-entry-transactions-balance\">{{ getBalance(account) | currency: 'USD' }}</div>\r\n          <div class=\"account-entry-transactions-right\"><span class=\"label\">Transactions</span> {{ account.transactions.length }}</div>\r\n          <div class=\"account-entry-transactions-right\"><span class=\"label\">Last Transaction</span> {{ !!account?.transactions[0]?.created ? (account.transactions[0].created | date: 'yyyy-MM-dd hh:mm') : 'N/A' }}</div>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}